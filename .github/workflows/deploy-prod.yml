name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to AWS ECR (opcional, caso use ECR)
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build Docker image
        run: |
          docker build -t ika-api:latest .

      - name: Save Docker image as tar file
        run: |
          docker save ika-api:latest -o ika-api.tar

      - name: Copy Docker image to EC2
        env:
          PEM_KEY: ${{ secrets.PEM_KEY }}
        run: |
          echo "${PEM_KEY}" > key.pem
          chmod 600 key.pem
          scp -i key.pem -o StrictHostKeyChecking=no ika-api.tar ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USER }}

      - name: SSH into EC2 and Deploy Container
        env:
          SPRING_DATASOURCE_DB: ${{ secrets.SPRING_DATASOURCE_DB }}
          SPRING_DATASOURCE_HOST: ${{ secrets.SPRING_DATASOURCE_HOST }}
          SPRING_DATASOURCE_PORT: ${{ secrets.SPRING_DATASOURCE_PORT }}
          SPRING_DATASOURCE_USERNAME: ${{ secrets.SPRING_DATASOURCE_USERNAME }}
          SPRING_PROFILE: ${{ secrets.SPRING_PROFILE }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SPRING_DATASOURCE_PASSWORD: ${{ secrets.SPRING_DATASOURCE_PASSWORD }}
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
        run: |
          ssh -i key.pem -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          # Criar o arquivo .env com as variáveis necessárias
          cat <<EOT > /home/${{ secrets.EC2_USER }}/.env
          SPRING_DATASOURCE_DB=${SPRING_DATASOURCE_DB}
          SPRING_DATASOURCE_HOST=${SPRING_DATASOURCE_HOST}
          SPRING_DATASOURCE_PORT=${SPRING_DATASOURCE_PORT}
          SPRING_DATASOURCE_USERNAME=${SPRING_DATASOURCE_USERNAME}
          SPRING_PROFILE=${SPRING_PROFILE}
          AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
          AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
          SPRING_DATASOURCE_PASSWORD=${SPRING_DATASOURCE_PASSWORD}
          JWT_SECRET_KEY=${JWT_SECRET_KEY}
          EOT

          # Parar o contêiner antigo, se estiver rodando
          docker stop ika-api || true
          docker rm ika-api || true

          # Remover a imagem antiga
          docker rmi ika-api:old || true

          # Carregar a nova imagem
          docker load -i /home/${{ secrets.EC2_USER }}/ika-api.tar

          # Rodar o novo contêiner com o arquivo .env
          docker run -d --name ika-api --env-file /home/${{ secrets.EC2_USER }}/.env -p 8080:8080 ika-api:latest

          # Limpeza
          rm /home/${{ secrets.EC2_USER }}/ika-api.tar
          EOF
