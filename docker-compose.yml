version: '3.8'

services:
  setup-postgres:
    image: postgres:alpine
    container_name: setup-postgres-container
    depends_on:
      - postgres
    environment:
      POSTGRES_DB: ${SPRING_DATASOURCE_DB}
      POSTGRES_USER: ${SPRING_DATASOURCE_USERNAME}
      POSTGRES_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
    entrypoint: /bin/sh -c "sleep 10 && \
      PGPASSWORD=${SPRING_DATASOURCE_PASSWORD} psql -h postgres -U ${SPRING_DATASOURCE_USERNAME} -d ${SPRING_DATASOURCE_DB} -c \"INSERT INTO storage.buckets (id, description) VALUES ('80177d00-de14-4fe3-99d3-b11c0a64298f', 'videos');\""
    networks:
      - ika-network

  setup-localstack:
    image: amazon/aws-cli
    container_name: setup-localstack-container
    depends_on:
      - localstack
    environment:
      AWS_ACCESS_KEY_ID: local
      AWS_SECRET_ACCESS_KEY: local
      AWS_DEFAULT_REGION: sa-east-1
    entrypoint: /bin/sh -c "sleep 10 && \
      aws --endpoint-url=http://localstack:4566 s3 mb s3://videos-80177d00-de14-4fe3-99d3-b11c0a64298f"
    networks:
      - ika-network

  postgres:
    image: postgres
    container_name: postgres-ika
    environment:
      POSTGRES_DB: ${SPRING_DATASOURCE_DB}
      POSTGRES_USER: ${SPRING_DATASOURCE_USERNAME}
      POSTGRES_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${SPRING_DATASOURCE_USERNAME} -d ${SPRING_DATASOURCE_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ika-network
    volumes:
      - postgres-data:/var/lib/postgresql/data

#  ika-api:
#    image: ika-api
#    container_name: ika-api
#    environment:
#      SPRING_DATASOURCE_DB: ${SPRING_DATASOURCE_DB}
#      SPRING_DATASOURCE_HOST: ${SPRING_DATASOURCE_HOST}
#      SPRING_DATASOURCE_PORT: ${SPRING_DATASOURCE_PORT}
#      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
#      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
#      SPRING_FLYWAY_PROFILE: ${SPRING_FLYWAY_PROFILE}
#      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
#    ports:
#      - "8080:8080"
#    depends_on:
#      - postgres
#      - localstack
#    networks:
#      - ika-network

  localstack:
    image: localstack/localstack
    container_name: localstack
    environment:
      SERVICES: s3
      AWS_DEFAULT_REGION: us-east-1
      DEBUG: 1
    ports:
      - "4566:4566"
      - "4510-4559:4510-4559"
    networks:
      - ika-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4566/health"]
      interval: 30s
      timeout: 10s
      retries: 5

networks:
  ika-network:
    driver: bridge

volumes:
  postgres-data:
